{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heito\\\\Documents\\\\Projects\\\\Portifolio\\\\portifolio\\\\src\\\\components\\\\ProjectCard.jsx\";\nimport { faAward } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectCard = _ref => {\n  let {\n    title,\n    description,\n    awards = []\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: awards.length !== 0 ? awards.map(award => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"award\",\n              icon: faAward,\n              style: {\n                color: '#DA3',\n                fontSize: '20pt'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"award-description\",\n              children: award\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["faAward","FontAwesomeIcon","React","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectCard","_ref","title","description","awards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","award","icon","style","color","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/heito/Documents/Projects/Portifolio/portifolio/src/components/ProjectCard.jsx"],"sourcesContent":["import { faAward } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\nconst ProjectCard = ({ title, description, awards = [] }) => {\r\n    return (\r\n        <div className=\"project-card\">\r\n            <div className=\"project-card-header\">\r\n                <div><h2>{title}</h2></div>\r\n                <div>{awards.length !== 0 ? awards.map((award) => {\r\n                    return (\r\n                        <>\r\n                            <FontAwesomeIcon className=\"award\" icon={faAward} style={{color: '#DA3', fontSize: '20pt'}} />\r\n                            <div className=\"award-description\">{award}</div>\r\n                        </>\r\n                    )\r\n                }) : ''}</div>\r\n            </div>\r\n            <p>{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectCard;"],"mappings":";AAAA,SAASA,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGC,IAAA,IAAyC;EAAA,IAAxC;IAAEC,KAAK;IAAEC,WAAW;IAAEC,MAAM,GAAG;EAAG,CAAC,GAAAH,IAAA;EACpD,oBACIJ,OAAA;IAAKQ,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBT,OAAA;MAAKQ,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChCT,OAAA;QAAAS,QAAA,eAAKT,OAAA;UAAAS,QAAA,EAAKJ;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3Bb,OAAA;QAAAS,QAAA,EAAMF,MAAM,CAACO,MAAM,KAAK,CAAC,GAAGP,MAAM,CAACQ,GAAG,CAAEC,KAAK,IAAK;UAC9C,oBACIhB,OAAA,CAAAE,SAAA;YAAAO,QAAA,gBACIT,OAAA,CAACH,eAAe;cAACW,SAAS,EAAC,OAAO;cAACS,IAAI,EAAErB,OAAQ;cAACsB,KAAK,EAAE;gBAACC,KAAK,EAAE,MAAM;gBAAEC,QAAQ,EAAE;cAAM;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9Fb,OAAA;cAAKQ,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAEO;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,eAClD,CAAC;QAEX,CAAC,CAAC,GAAG;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNb,OAAA;MAAAS,QAAA,EAAIH;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEd,CAAC;AAAAQ,EAAA,GAjBKlB,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}